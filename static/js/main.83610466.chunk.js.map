{"version":3,"sources":["assets/Icons/SVG/Icon-play.svg","assets/Icons/SVG/Icon-fullscreen.svg","assets/Icons/SVG/Icon-volume.svg","assets/Images/Mohan-muruge.jpg","assets/Icons/SVG/Icon-likes.svg","assets/Icons/SVG/Icon-views.svg","assets/Logo/Logo-brainflix.svg","assets/Images/Upload-video-preview.jpg","components/CommentsItem/CommentsItem.jsx","components/CommentsPosted/CommentsPosted.jsx","components/VideoPlayer/VideoPlayer.jsx","components/CommentsInput/CommentsInput.jsx","components/NextVideoItem/NextVideoItem.jsx","components/NextVideo/NextVideo.jsx","components/VideoDetails/VideoDetails.jsx","components/Home/Home.jsx","components/NavBar/NavBar.jsx","components/UploadsPage/UploadsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CommentsItem","props","arrayDate","Date","date","properDate","getUTCMonth","getUTCDate","getUTCFullYear","className","name","commentitem","CommentsPosted","commentsArray","comments","map","comment","key","id","timestamp","videoPlayer","poster","src","play","alt","time","fullscreen","volume","noSubmit","event","preventDefault","target","reset","CommentsInput","commentsTotal","image","action","onSubmit","tabIndex","type","placeholder","NextVideoItem","this","title","channel","Component","NextVideo","nextVideo","video","to","VideoDetails","artist","views","likes","description","apiKey","apiURL","heroVideo","Home","state","mainVideo","sideVideo","getMainVideo","axios","get","then","response","setState","data","catch","error","console","log","getSideVideo","dynamicID","match","params","duration","length","filter","next","navBar","logo","UploadsPage","videoPreview","htmlFor","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.83610466.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Icon-play.edecac9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-fullscreen.482a9149.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-volume.a1be2da0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Mohan-muruge.ba2f48f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-likes.4895cd47.svg\";","module.exports = __webpack_public_path__ + \"static/media/Icon-views.2ceaa231.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo-brainflix.9049851c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Upload-video-preview.c814c81c.jpg\";","import React from 'react';\r\nimport './CommentsItem.scss'\r\n\r\nconst CommentsItem = (props) => {\r\n\r\n    let arrayDate = new Date(props.date);\r\n    let properDate = arrayDate\r\n        .getUTCMonth() + 1 + \"/\" +\r\n        arrayDate.getUTCDate() + \"/\" +\r\n        arrayDate.getUTCFullYear();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"commentsitem__wrapper\">\r\n                <div className=\"commentsitem__circle-image\" />\r\n                <div className=\"commentsitem__name-date-wrapper\">\r\n                    <div className=\"commentsitem__name\">{props.name}</div>\r\n                    <h4 className=\"commentsitem__date\">{properDate}</h4>\r\n                </div>\r\n\r\n                </div>\r\n                <div className=\"commentsitem__text-wrapper\">\r\n                    <p className=\"commentsitem__commentitem\">{props.commentitem}</p>\r\n                </div>\r\n\r\n               \r\n                \r\n                \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default CommentsItem","import React from 'react';\r\nimport CommentsItem from '../CommentsItem/CommentsItem';\r\nimport './CommentsPosted.scss';\r\n\r\n\r\n\r\nexport default function CommentsPosted(props) {\r\n    \r\n    return (\r\n      <div className=\"comments__posted\">\r\n         {props.commentsArray.comments.map(comment => <CommentsItem key={comment.id} name={comment.name} date={comment.timestamp} commentitem={comment.comment}/>)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport './VideoPlayer.scss';\r\nimport play from '../../assets/Icons/SVG/Icon-play.svg';\r\nimport fullscreen from '../../assets/Icons/SVG/Icon-fullscreen.svg';\r\nimport volume from '../../assets/Icons/SVG/Icon-volume.svg';\r\n\r\n\r\n\r\nconst videoPlayer = (props) => {\r\n    return (\r\n        <section className=\"video\">\r\n            <video poster={props.poster} className=\"video__player\">Your browser does not support the video tag.</video>\r\n            <div className=\"video__overlay\">\r\n                <img src={play} className=\"video__play-button\" alt=\"Play button\" />\r\n                <div className=\"video__scrubber-wrapper\"><hr className=\"video__scrubber\" /><div className=\"video__scrubber-time\">0:00 / {props.time} </div></div>\r\n                <img src={fullscreen} className=\"video__fullscreen-button\" alt=\"Fullscreen button\" />\r\n                <img src={volume} className=\"video__volume-button\" alt=\"Volume button\" />\r\n            </div>\r\n\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default videoPlayer","import React from 'react'\r\nimport './CommentsInput.scss';\r\nimport image from '../../assets/Images/Mohan-muruge.jpg';\r\n\r\nlet noSubmit = (event) => {\r\n    event.preventDefault();    \r\n    event.target.reset();\r\n  }\r\n\r\nexport default function CommentsInput(props) {\r\n    return (\r\n        <section className=\"comments\">\r\n        <p className=\"comments__counter\">{props.commentsTotal} Comments</p>\r\n        <p className=\"comments__label-join\" >JOIN THE CONVERSATION</p>\r\n        <div className=\"comments__wrapper\">\r\n            <img className=\"comments__circle-image\" src={image} alt=\"Pic of Mohan\" />\r\n            <div className=\"comments__form-wrapper\">\r\n                <form action=\"submit\" onSubmit={noSubmit} className=\"comments__form\" tabIndex=\"1\">\r\n                    <input type=\"text\" className=\"comments__label-style-comments\" name=\"comment\"\r\n                        placeholder=\"Write comment here\" />\r\n                    <button className=\"comments__button\" type=\"submit\">COMMENT</button>\r\n                </form>\r\n            </div>\r\n        </div>               \r\n\r\n    </section>\r\n    )\r\n}\r\n","import './NextVideoItem.scss';\r\nimport React, { Component } from 'react'\r\n\r\nexport default class NextVideoItem extends Component {\r\n  render() {\r\n    const {image, title, channel} = this.props\r\n    return (\r\n      <section className=\"nextvideo__section\">\r\n        <div className=\"nextvideo__wrapper\">\r\n          <img className=\"nextvideo__image\" src={image} alt={title} />\r\n          <div className=\"nextvideo__text-wrapper\">\r\n            <h4 className=\"nextvideo__title\">{title}</h4>\r\n            <p className=\"nextvideo__author\">{channel}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './NextVideo.scss';\r\nimport NextVideoItem from '../NextVideoItem/NextVideoItem';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NextVideo(props) {\r\n  return (\r\n    <div className=\"next\">\r\n      <h3 className=\"next__header\">NEXT VIDEO</h3>\r\n\r\n      {props.nextVideo.map((video) =>\r\n        <Link to={`/${video.id}`} key={video.id} className=\"next__link\" >\r\n          <NextVideoItem  title={video.title} channel={video.channel} image={video.image} /></Link> \r\n      )\r\n      }\r\n         \r\n      </div>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport likes from '../../assets/Icons/SVG/Icon-likes.svg';\r\nimport views from '../../assets/Icons/SVG/Icon-views.svg';\r\nimport './VideoDetails.scss';\r\n\r\nexport default function VideoDetails(props) {\r\n    \r\n    let arrayDate = new Date(props.date);\r\n    let properDate = arrayDate\r\n        .getUTCMonth() + 1 + \"/\" +\r\n        arrayDate.getUTCDate() + \"/\" +\r\n        arrayDate.getUTCFullYear();\r\n\r\n\r\n    return (\r\n        <div className=\"videodetails__wrapper\">\r\n                <h1 className=\"videodetails__header\">{props.title}</h1>\r\n                <div className=\"videodetails__section-wrapper\">\r\n                    <div className=\"videodetails__artist-date-wrapper\">\r\n                        <p className=\"videodetails__artist\">{props.artist}</p>\r\n                        <p className=\"videodetails__date\">{properDate}</p>\r\n                    </div>\r\n                    <div className=\"videodetails__views-likes-wrapper\">\r\n                        <img src={views} alt=\"Views icon\" className=\"videodetails__views-icon\" />\r\n                        <p className=\"videodetails__views-counter\">{props.views}</p>\r\n                        <img src={likes} alt=\"Likes icon\" className=\"videodetails__likes-icon\" />\r\n                        <p className=\"videodetails__likes-counter\">{props.likes}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"videodetails__text-wrapper\">\r\n                    <p className=\"videodetails__text\">{props.description}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Home.scss';\r\nimport CommentsPosted from '../CommentsPosted/CommentsPosted'\r\nimport VideoPlayer from '../VideoPlayer/VideoPlayer'\r\nimport CommentsInput from '../CommentsInput/CommentsInput'\r\nimport NextVideo from '../NextVideo/NextVideo';\r\nimport VideoDetails from '../VideoDetails/VideoDetails';\r\n\r\n\r\nconst apiKey =\"fcdda4b1-8a54-4bbe-9edd-7df54c290151\";\r\nconst apiURL =\"https://project-2-api.herokuapp.com/videos/?api_key=\";\r\nconst heroVideo =\"https://project-2-api.herokuapp.com/videos/1af0jruup5gu/\";\r\nconst dynamicLink = 'https://project-2-api.herokuapp.com/videos/';\r\n\r\n\r\nexport default class Home extends Component {\r\n  state = {\r\n    mainVideo: {\r\n      comments: []\r\n    },\r\n    sideVideo: [],\r\n  }\r\n\r\n  \r\n  getMainVideo = () => {\r\n    axios\r\n    .get(`${heroVideo}?api_key=${apiKey}`)\r\n    .then(response => {\r\n        this.setState({\r\n        mainVideo: response.data,\r\n      });     \r\n    })\r\n    .catch(error => console.log(error))     \r\n  }\r\n\r\n  getSideVideo = () => {\r\n    axios\r\n    .get(`${apiURL}${apiKey}`)\r\n    .then(response => {\r\n      \r\n      this.setState({\r\n        sideVideo: response.data,\r\n      });\r\n    })\r\n    .catch(error => console.log(error))   \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMainVideo();\r\n    this.getSideVideo();\r\n    \r\n  }\r\n\r\n  componentDidUpdate() {      \r\n    let dynamicID = this.props.match.params.id\r\n    if (typeof this.props.match.params.id === \"undefined\") {\r\n      dynamicID = \"1af0jruup5gu\"\r\n    }       \r\n    axios\r\n    .get(`${dynamicLink}${dynamicID}?api_key=${apiKey}`)\r\n    .then(response => {\r\n      if (this.state.mainVideo.id !== response.data.id) {\r\n        this.setState({\r\n          mainVideo: response.data,\r\n        });\r\n      }   \r\n    })      \r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n      <VideoPlayer \r\n        poster={this.state.mainVideo.image} \r\n        time={this.state.mainVideo.duration} \r\n        \r\n         />  \r\n\r\n      <section className=\"page\">      \r\n      <div className=\"hero\"> \r\n      <VideoDetails\r\n      title={this.state.mainVideo.title} \r\n      artist={this.state.mainVideo.channel} \r\n      date={this.state.mainVideo.timestamp}\r\n      likes={this.state.mainVideo.likes}\r\n      views={this.state.mainVideo.views}\r\n      description={this.state.mainVideo.description} \r\n      />    \r\n      <CommentsInput commentsTotal={this.state.mainVideo.comments.length}/> \r\n      \r\n      <CommentsPosted commentsArray={this.state.mainVideo} /> \r\n      </div>      \r\n\r\n      <div className=\"aside\">\r\n      <NextVideo nextVideo={this.state.sideVideo.filter(next => \r\n        next.id !== this.state.mainVideo.id)}/>\r\n      </div>  \r\n\r\n      </section>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}    \r\n","import React from \"react\";\r\nimport './NavBar.scss';\r\nimport logo from '../../assets/Logo/Logo-brainflix.svg';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nlet noSubmit = (event) => {\r\n    event.preventDefault();    \r\n    event.target.reset();\r\n  }\r\n\r\nconst navBar = () => {\r\n    return (\r\n        <header>\r\n            <nav className=\"nav\">\r\n                <div className=\"navbar\">\r\n                    <Link to=\"/\" className=\"navbar__anchor\"><img src={logo} alt=\"Logo\" className=\"navbar__logo\" /></Link>\r\n                    <form action=\"submit\" className=\"navbar__search\" onSubmit={noSubmit}>\r\n                        <input type=\"text\" className=\"navbar__search-style\" name=\"search\" placeholder=\"Search\"></input>\r\n                    </form>\r\n                    <div className=\"navbar__upload-circle-wrapper\">\r\n                        <Link to=\"/upload\"> <button type=\"submit\" className=\"navbar__upload-button\">UPLOAD</button></Link>\r\n                        <div className=\"navbar__circle-image\"></div></div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default navBar","import React from 'react'\r\nimport './UploadsPage.scss'\r\nimport videoPreview from '../../assets/Images/Upload-video-preview.jpg'\r\n\r\nlet noSubmit = (event) => {\r\n    event.preventDefault();    \r\n    event.target.reset();\r\n  }\r\n\r\nexport default function UploadsPage() {\r\n    return (\r\n        <section className=\"uploads\">\r\n            <h1 className=\"uploads__header\">Upload Video</h1>\r\n            <form className=\"uploads__form\" onSubmit={noSubmit}>\r\n                <div className=\"uploads__wrapper\">\r\n                    <div className=\"uploads__thumbnail-sub-wrapper\">\r\n                        <h2 className=\"uploads__sub-header\">VIDEO THUMBNAIL</h2>\r\n                        <img className=\"uploads__image\" src={videoPreview} alt=\"Preview\" />\r\n                    </div>\r\n                    <div className=\"uploads__title-input-wrapper\">\r\n                        <label htmlFor=\"title\"><h2 className=\"uploads__sub-header\">TITLE YOUR VIDEO</h2></label>\r\n                        <input type=\"text\" placeholder=\"Add a title to your video\" name=\"title\" className=\"uploads__input\" />\r\n                        <label htmlFor=\"description\"><h2 className=\"uploads__sub-header\">ADD A VIDEO DESCRIPTION</h2></label>\r\n                        <input name=\"description\" className=\"uploads__description\" placeholder=\"Add a description of your video\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"uploads__buttons-wrapper\">\r\n                    <button className=\"uploads__publish-button\">PUBLISH</button>\r\n                    <button className=\"uploads__cancel-button\">CANCEL</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home/Home'\r\nimport NavBar from './components/NavBar/NavBar'\r\nimport UploadsPage from './components/UploadsPage/UploadsPage'\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/upload\" exact component={UploadsPage} />                \r\n          <Route path=\"/:id\" exact component={Home} />  \r\n        </Switch>\r\n      </Router>\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}